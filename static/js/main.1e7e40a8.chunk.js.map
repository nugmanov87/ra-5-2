{"version":3,"sources":["components/Widget.jsx","components/WidgetWeather.jsx","components/WidgetPopular.jsx","components/WidgetMap.jsx","components/WidgetRadio.jsx","components/WidgetTV.jsx","components/ServicesList.jsx","components/SearchExample.jsx","components/SearchBar.jsx","components/TopicsList.jsx","components/NewsList.jsx","components/RatesList.jsx","components/Banner.jsx","components/Date.jsx","components/Promo.jsx","data/widgetData.js","App.js","serviceWorker.js","index.js"],"names":["Widget","props","className","title","children","WidgetWeather","weather","current","moment","hour","night","day","WidgetPopular","popular","map","item","key","shortid","generate","subtitle","WidgetMap","WidgetRadio","podcasts","station","WidgetTV","tv","time","channel","ServicesList","links","link","href","SearchExample","example","SearchBar","Fragment","type","placeholder","TopicsList","topics","topic","NewsList","news","sourceIcon","text","RatesList","rates","rate","growth","Banner","data-text","Date","date","locale","format","Promo","src","img","alt","desc","mainLinks","searchLinks","promoItem","currentWeather","today","App","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e7e40a8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Обертка для виджета\n\nconst Widget = props => {\n  return (\n    <div className=\"ui segment\">\n      <h3>{props.title}</h3>\n      {props.children}\n    </div>\n  );\n};\n\nWidget.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Widget;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Widget from \"./Widget\";\n\n// Блок \"погода\"\n\nconst WidgetWeather = ({ weather, moment }) => {\n  const current = moment.hour() < 6 ? weather.night : weather.day;\n  return (\n    <Widget title=\"Погода\">\n      <p>\n        <b>+{current}&deg;</b>\n      </p>\n      <p>День: +{weather.day}</p>\n      <p>Ночь: +{weather.night}</p>\n    </Widget>\n  );\n};\n\nWidgetWeather.propTypes = {\n  current: PropTypes.shape({\n    day: PropTypes.number.isRequired,\n    night: PropTypes.number.isRequired\n  }),\n  moment: PropTypes.object\n};\n\nexport default WidgetWeather;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport Widget from \"./Widget\";\n\n// Блок \"посещаемое\"\n\nconst WidgetPopular = ({ popular }) => {\n  return (\n    <Widget title=\"Посещаемое\">\n      {popular.map(item => (\n        <p key={shortid.generate()}>\n          <b>{item.title}</b> {item.subtitle}\n        </p>\n      ))}\n    </Widget>\n  );\n};\n\nWidgetPopular.propTypes = {\n  popular: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      subtitle: PropTypes.string.isRequired\n    })\n  )\n};\n\nexport default WidgetPopular;\n","import React from \"react\";\nimport Widget from \"./Widget\";\n\n// Блок \"карта\"\n\nconst WidgetMap = () => {\n  return (\n    <Widget title=\"Карта России\">\n      <p>Расписания</p>\n    </Widget>\n  );\n};\n\nexport default WidgetMap;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport Widget from \"./Widget\";\n\n// Блок \"эфир\"\n\nconst WidgetRadio = ({ podcasts }) => {\n  return (\n    <Widget title=\"Эфир\">\n      {podcasts.map(item => (\n        <p key={shortid.generate()}>\n          <b>{item.title}</b> {item.station}\n        </p>\n      ))}\n    </Widget>\n  );\n};\n\nWidgetRadio.propTypes = {\n  podcasts: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      station: PropTypes.string.isRequired\n    })\n  )\n};\n\nexport default WidgetRadio;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport Widget from \"./Widget\";\n\n// Блок \"телепрограмма\"\n\nconst WidgetTV = ({ tv }) => {\n  return (\n    <Widget title=\"Телепрограмма\">\n      {tv.map(item => (\n        <p key={shortid.generate()}>\n          <b>\n            {item.time} {item.title}\n          </b>{\" \"}\n          {item.channel}\n        </p>\n      ))}\n    </Widget>\n  );\n};\n\nWidgetTV.propTypes = {\n  tv: PropTypes.arrayOf(\n    PropTypes.shape({\n      time: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      channel: PropTypes.string.isRequired\n    })\n  )\n};\n\nexport default WidgetTV;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\n\n// Список поисковых сервисов\n\nconst ServicesList = ({ links }) => {\n  return (\n    <div className=\"ui horizontal list\">\n      {links.map(link => (\n        <a href=\"https://nugmanov87.github.io/ra-5-2/\" className=\"item\" key={shortid.generate()}>\n          {link}\n        </a>\n      ))}\n    </div>\n  );\n};\n\nServicesList.propTypes = {\n  links: PropTypes.arrayOf(PropTypes.string.isRequired)\n};\n\nexport default ServicesList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Пример поискового запроса\n\nconst SearchExample = ({ example }) => {\n  return (\n    <div>\n      <p>\n        <b>Найдется все, например</b> {example}\n      </p>\n    </div>\n  );\n};\n\nSearchExample.propTypes = {\n  example: PropTypes.string.isRequired\n};\n\nexport default SearchExample;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ServicesList from \"./ServicesList\";\nimport SearchExample from \"./SearchExample\";\n\n// Поисковая форма со списком сервисов и примером запроса\n\nconst SearchBar = ({ links, example }) => {\n  return (\n    <React.Fragment>\n      <ServicesList links={links} />\n      <div className=\"ui fluid action input\">\n        <input type=\"text\" placeholder=\"Search...\" />\n        <div className=\"ui button\">Search</div>\n      </div>\n      <SearchExample example={example} />\n    </React.Fragment>\n  );\n};\n\nSearchBar.propTypes = {\n  example: PropTypes.string.isRequired,\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\n\n// Список новостных разделов\n\nconst TopicsList = ({ topics }) => {\n  return (\n    <div className=\"ui horizontal bulleted list\">\n      {topics.map(topic => (\n        <a href=\"https://nugmanov87.github.io/ra-5-2/\" className=\"item\" key={shortid.generate()}>\n          {topic}\n        </a>\n      ))}\n    </div>\n  );\n};\n\nTopicsList.propTypes = {\n  topics: PropTypes.arrayOf(PropTypes.string.isRequired)\n};\n\nexport default TopicsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\n\n// Вывод список заданных новостей\n\nconst NewsList = ({ news }) => {\n  return (\n    <div className=\"ui list\">\n      {news.map(item => (\n        <p className=\"item\" key={shortid.generate()}>\n          <i className={`${item.sourceIcon} icon`}></i> {item.text}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nNewsList.propTypes = {\n  news: PropTypes.arrayOf(\n    PropTypes.shape({\n      sourceIcon: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired\n    })\n  )\n};\n\nexport default NewsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\n\n// Список курсов валют\n\nconst RatesList = ({ rates }) => {\n  return (\n    <div className=\"ui horizontal list\">\n      {rates.map(item => (\n        <p className=\"item\" key={shortid.generate()}>\n          <b>\n            {item.title} {item.rate}\n          </b>{\" \"}\n          {item.growth}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nRatesList.propTypes = {\n  rates: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      rate: PropTypes.string.isRequired,\n      growth: PropTypes.string.isRequired\n    })\n  )\n};\n\nexport default RatesList;\n","import React from \"react\";\n\n// Рекламный баннер\n\nconst Banner = () => {\n  return (\n    <div\n      className=\"ui large centered leaderboard test ad\"\n      data-text=\"Терминатор 6 - в кино с 12 октября\"\n    ></div>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\nimport \"moment/locale/ru\";\n\n// Вывод текущей даты и времени\n\nconst Date = ({ date }) => {\n  return <div>{date.locale(\"ru\").format(\"DD MMMM, dddd hh:mm\")}</div>;\n};\n\nexport default Date;\n","import React from \"react\";\n\n// Промо блок отдельного проекта\n\nconst Promo = ({ item }) => {\n  return (\n    <div className=\"ui fluid card\">\n      <div className=\"image\">\n        <img src={item.img} alt=\"\" />\n      </div>\n      <div className=\"content\">\n        <p className=\"header\">{item.title}</p>\n        <div className=\"meta\">{item.desc}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Promo;\n","export const popular = [\n  { title: \"Практикум\", subtitle: \"— стать аналитиком\" },\n  { title: \"Яндекс.Браузер\", subtitle: \"— с переводом страниц\" },\n  { title: \"Недвижимость\", subtitle: \"— жилье с евроремонтом\" }\n];\n\nexport const tv = [\n  { time: \"10:55\", title: \"Пятый канал\", channel: \"Улицы разбитых фонарей. 2-я серия\" },\n  { time: \"11:20\", title: \"Россия 24\", channel: \"Бегасон TV\" },\n  { time: \"12:45\", title: \"РЕН ТВ\", channel: 'Казино \"Рояль\" ' }\n];\n\nexport const podcasts = [\n  { title: \"Управление как искусство\", station: \"Успех\" },\n  { title: \"Ночь. Мир в это время\", station: \"earthTV\" },\n  { title: \"Андрей Возн...\", station: \"Совершенно Секретно\" }\n];\n\nexport const rates = [\n  { title: \"USD MOEX\", rate: \"76,49\", growth: \"−0,76\" },\n  { title: \"EUR MOEX\", rate: \"82,63\", growth: \"−1,23\" },\n  { title: \"НЕФТЬ\", rate: \"35,03\", growth: \"+17,31%\" }\n];\n\nexport const mainLinks = [\"Сейчас в СМИ\", \"в Оренбурге\", \"Интересное\"];\n\nexport const searchLinks = [\n  \"Видео\",\n  \"Картинки\",\n  \"Новости\",\n  \"Карты\",\n  \"Маркет\",\n  \"Переводчик\",\n  \"Эфир\"\n];\n\nexport const news = [\n  {\n    text: \"ЦБ разъяснил порядок начисления процентов в кредитные каникулы\",\n    sourceIcon: \"pastafarianism\"\n  },\n  {\n    text: \"Собянин: Москва относится к самой высокой группе риска по коронавирусу\",\n    sourceIcon: \"pepper hot\"\n  },\n  {\n    text: 'Под Рязанью мужчина застрелил пять человек',\n    sourceIcon: \"rocket\"\n  },\n  {\n    text: \"Главврач больницы в Коммунарке рассказал о возрасте больных COVID-19\",\n    sourceIcon: \"flag usa\"\n  },\n  {\n    text: \"В Таиланде у семи граждан РФ выявлен коронавирус\",\n    sourceIcon: \"pepper hot\"\n  }\n];\n\nexport const searchExample = \"текст песни тает лед\";\n\nexport const promoItem = {\n  title: \"Работа над ошибками\",\n  desc: \"Смотрите на Яндексе и запоминайте\",\n  img: \"https://www.equatorial.by/sites/default/files/banff-national-park001_2.jpg\"\n};\n\nexport const currentWeather = {\n  day: 10,\n  night: 7\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport WidgetWeather from \"./components/WidgetWeather\";\nimport WidgetPopular from \"./components/WidgetPopular\";\nimport WidgetMap from \"./components/WidgetMap\";\nimport WidgetRadio from \"./components/WidgetRadio\";\nimport WidgetTV from \"./components/WidgetTV\";\nimport SearchBar from \"./components/SearchBar\";\nimport TopicsList from \"./components/TopicsList\";\nimport NewsList from \"./components/NewsList\";\nimport RatesList from \"./components/RatesList\";\nimport Banner from \"./components/Banner\";\nimport Date from \"./components/Date\";\nimport Promo from \"./components/Promo\";\nimport * as data from \"./data/widgetData\";\n\nconst today = moment();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"ui relaxed grid\">\n        <div className=\"twelve wide column\">\n          <div className=\"ui horizontal segments\">\n            <div className=\"ui segment\">\n              <TopicsList topics={data.mainLinks} />\n            </div>\n            <div className=\"ui segment\">\n              <Date date={today} />\n            </div>\n          </div>\n          <div className=\"ui segment\">\n            <NewsList news={data.news} />\n            <RatesList rates={data.rates} />\n          </div>\n        </div>\n        <div className=\"four wide column\">\n          <Promo item={data.promoItem} />\n        </div>\n      </div>\n      <div className=\"ui segments\">\n        <div className=\"ui segment\">\n          <SearchBar example={data.searchExample} links={data.searchLinks} />\n        </div>\n        <div className=\"ui segment\">\n          <Banner />\n        </div>\n        <div className=\"ui horizontal segments\">\n          <div className=\"ui segment\">\n            <WidgetWeather weather={data.currentWeather} moment={today} />\n            <WidgetPopular popular={data.popular} />\n          </div>\n          <div className=\"ui segment\">\n            <WidgetMap />\n            <WidgetTV tv={data.tv} />\n          </div>\n          <div className=\"ui segment\">\n            <WidgetRadio podcasts={data.podcasts} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}